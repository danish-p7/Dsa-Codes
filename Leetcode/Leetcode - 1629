Question : https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/



class Solution {
public:
    const int mod = (int)1e9+7;
    int dp[507][506];
    
    int helper(int i, int s, int arrLen, int steps)
    {
        if(s==steps && i==0)return 1;
        if(i<0)return 0;
        if(i>=arrLen)return 0;
        if(s>=steps)return 0;
        
        if(dp[i][s] != -1)return dp[i][s];
        
        int ans = 0;
        
        ans += helper(i, s+1, arrLen, steps);
        ans %= mod;
        ans += helper(i+1, s+1, arrLen, steps);
        ans%=mod;
        ans += helper(i-1, s+1, arrLen, steps);
        ans %= mod;
        
        return dp[i][s] = ans;
    }
    
    int numWays(int steps, int arrLen) {
        memset(dp, -1, sizeof dp);
        return helper(0, 0, arrLen, steps);
    }
};
